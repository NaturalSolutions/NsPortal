###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]

use = egg:ns_portal

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

#---------------------------------------------------------------------------#
#                  DATABASE CONFIGURATION START                             #
#                                                                           #
    # DBUSED = String with separator (,) with META name of database
    # example :
    # DBUSED = Main_Db,Log_Db

DBUSED                 = Main_Db,Log_Db

# For each meta name defined in DBUSED we should have
    # the following key defined too
    # .ODBCDRIVER if you want to know what drivers you have
    #             launch python
    #             import pyodbc
    #             launch pyodbc.drivers() in python console
    # .DIALECT
    # .UID
    # .PWD
    # .SERVER
    # .PORT
    # .DATABASE


# connexion string examples
#       mssql+pyodbc://sa:mypassword@localhost/SECURITE?driver=SQL+Server
#       mssql+pymssql://toto:mypassword@desktop-11immn2\sqlinstance
sqlalchemy.Main_Db.url = mssql+pyodbc://$UID$:$PWD$@$SERVER$/SECURITE?driver=ODBC+Driver+11+for+SQL+Server
sqlalchemy.Main_Db.implicit_returning = False
sqlalchemy.Main_Db.pool_reset_on_return = commit
sqlalchemy.Main_Db.pool_size = 30
sqlalchemy.Main_Db.pool_timeout = 5
sqlalchemy.Main_Db.max_overflow = 10
sqlalchemy.Main_Db.case_sensitive= False


sqlalchemy.Log_Db.url = mssql+pyodbc://$UID$:$PWD$@$SERVER$/NSLog?driver=ODBC+Driver+11+for+SQL+Server
sqlalchemy.Log_Db.implicit_returning = False
sqlalchemy.Log_Db.pool_reset_on_return = commit
sqlalchemy.Log_Db.pool_size = 30
sqlalchemy.Log_Db.pool_timeout = 5
sqlalchemy.Log_Db.max_overflow = 10
sqlalchemy.Log_Db.case_sensitive= False

##############################################################################################################################
#                                                                                                                            #
#                           STARTING SECURITY                                                                                #
#                                                                                                                            #
##############################################################################################################################
#  INFOS SECURITY                                                                                                            #
#  JWTSECURITY.COOKIETOKENMASTER_SECRET = this key will be used generate cookie for portal                                   #
#  JWTSECURITY.REFRESHTOKENMASTER_SECRET = this key wil be used for refresh token                                            #
#  JWTSECURITY.ACCESSTOKENMASTER_SECRET = this key wil be used for access token (this key MUST be same in others app)        #
#  JWTSECURITY.CODETOKENMASTER_SECRET = this key will be used for code                                                       #
#  JWTSECURITY.COOKIENAME    = this key will be used to identify the cookie we want to retrieve in the request and get claims#
##############################################################################################################################

JWTSECURITY.COOKIENAME                  =   NSPortal-Core

JWTSECURITY.COOKIETOKENMASTER_SECRET    =   test
JWTSECURITY.COOKIETOKENALGORITHM        =   HS512

JWTSECURITY.CODETOKENMASTER_SECRET      =   test2
JWTSECURITY.CODETOKENALGORITHM          =   HS256

JWTSECURITY.ACCESSTOKENMASTER_SECRET    =   test3
JWTSECURITY.ACCESSTOKENALGORITHM        =   HS512

JWTSECURITY.REFRESHTOKENMASTER_SECRET   =   test4
JWTSECURITY.REFRESHTOKENALGORITHM       =   HS512
#                           ENDING SECURITY                                                                                  #
#                                                                                                                            #
##############################################################################################################################

##############################################################################################################################
#                                                                                                                            #
#                           STARTING RENECO CONTEXT                                                                          #
#                                                                                                                            #
##############################################################################################################################
#  INFOS RENECO                                                                                                              #
#  RENECO.SECURITE.TINS_LABEL = this is specific for RENECO                                                                  #
#                               YOU HAVE TO KNOW WHICH APPLICATION IN SECURITE                                               #
#                               when authentificated by the portal, the payload will have an "dictionaries"                  #
#                                 "roles" : {                                                                                #
#                                            TIns_Label : Role                                                               #
#                                           }                                                                                #
##############################################################################################################################

RENECO.SECURITE.TINS_LABEL =
RENECO.SECURITE.TSIT_NAME = NS-Marseille

#                           ENDING RENECO CONTEXT                                                                            #
#                                                                                                                            #
##############################################################################################################################


##############################################################################################################################
#                                                                                                                            #
#                           STARTING CORS                                                                                    #
#                                                                                                                            #
##############################################################################################################################

CORS.DOMAINWHITELIST = http://localhost,http://localhost:8100
CORS.HEADERSALLOW = Origin,content-type

#                           ENDING CORS                                                                                      #
#                                                                                                                            #
##############################################################################################################################



# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1



###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 127.0.0.1
port = 6544

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, ns_portal, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_ns_portal]
level = DEBUG
handlers =
qualname = app

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
